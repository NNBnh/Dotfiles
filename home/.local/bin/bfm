#!/bin/sh

#     ____  ________  ___
#    / __ )/ ____/  |/  /
#   / __  / /_  / /|_/ /
#  / /_/ / __/ / /  / /
# /_____/_/   /_/  /_/
#

# File:         bfm
# Description:  Files manager that SuperB
# Author:       NNB
#               └─ https://github.com/NNBnh
# URL:          https://github.com/NNBnh/dots/blob/master/home/.local/bin/bfm
# License:      GPLv3

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.


# Values
TMPDIR="${TMPDIR:-/tmp}"

LIST="${BFM_LIST:-ls -1}"
RAW="${BFM_RAW:-$LIST}"

FINDER="${BFM_FINDER:-fzf}"

OPENER="${BFM_OPENER:-xdg-open}"
PREVIEWER="${BFM_PREVIEWER:-$LIST}"

OPTIONS=$(echo $BFM_OPTIONS)

DIRECTORY="${1:-$PWD}"
PID="${2:-$$}"
PREVIEW="$3"

TEMPORARY="${BFM_TEMPORARY:-$TMPDIR/bfm}/$PID"


# Funtions
match_check() {
	file_index='1'

	while IFS= read -r file_match || [ -n "$file_match" ]; do
		[ "$file_match" = "$1" ] && {
			sed -n -e "${file_index}p" "$TEMPORARY/raw"
			break
		}

		file_index=$(( file_index + 1 ))
	done < "$TEMPORARY/match"
}


# Start
if [ -n "$PREVIEW" ]; then
	eval "$PREVIEWER \"$(match_check "$PREVIEW")\""
else
	cd "$DIRECTORY" || exit 1

	mkdir -p "$TEMPORARY"

	echo '.' > "$TEMPORARY/selections"

	while [ -n "$(< "$TEMPORARY/selections")" ]; do
		script --quiet /dev/null --command "$LIST" > "$TEMPORARY/list"
		eval "$RAW" | sed -e 's/\x1B\[[0-9;]*[JKmsu]//g' > "$TEMPORARY/raw"
		sed -e 's/\x1B\[[0-9;]*[JKmsu]//g' "$TEMPORARY/list" > "$TEMPORARY/match"
		printf '%s' "$(< "$TEMPORARY/list")" | eval "$FINDER --ansi --multi --header=\"\$PWD\" --preview=\"$0 '.' '$PID' {}\" $OPTIONS" > "$TEMPORARY/selections"

		while IFS= read -r selection || [ -n "$selection" ]; do
			file=$(match_check "$selection")

			cd "$file" &>/dev/null || eval "$OPENER \"$file\" &>/dev/null &"
		done < "$TEMPORARY/selections"
	done

	echo "$PWD" > "$TEMPORARY/pwd"
fi


exit 0
