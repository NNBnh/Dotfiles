# __   __      __
# \ \  \ \    |  \
#  \ \  \ \   |  /
#   \ \  \ \  |   \
#    \_\  \_\ |___/
#

# File:         .kakrc
# Description:  Kakrc config that SuperB
# Author:       NNB
#               └─ https://github.com/NNBnh


###################################[ Plugins ]##################################
nop %sh{
	[[ ! -f $HOME/.local/share/kak/plugins/plug.kak ]] \
		&& git clone https://github.com/robertmeta/plug.kak.git \
			"$HOME/.local/share/kak/plugins/plug.kak"
}
source "%sh{ echo $HOME }/.local/share/kak/plugins/plug.kak/rc/plug.kak"

plug 'NNBnh/bcolor.kak' theme config %{
	declare-option str bcolor_main 'bright-yellow'
	# declare-option str ui_background 'rgb:303030'
	declare-option bool bcolor_main_light true
	declare-option bool bcolor_cursor_main true
	declare-option bool bcolor_status_main true
	colorscheme bcolor
}

plug 'alexherbo2/palette.kak'

plug 'NNBnh/bkey.kak' config %{
	bkey-make
}
# source "%sh{ echo $HOME }/Datas/Documents/bkey.kak/rc/bkey.kak"
# bkey-make

plug 'danr/kakoune-easymotion' config %{
	map global normal <m> ': easy-motion-char<ret>'
	map global normal <a-m> ': easy-motion-word<ret>'
}

plug 'occivink/kakoune-phantom-selection' config %{
	map global Menu <g> ': phantom-selection-iterate-next<ret>'
	map global Menu <G> ': phantom-selection-iterate-prev<ret>'
}

plug 'lePerdu/kakboard' config %{
	declare-option str-list kakboard_paste_keys ''
	declare-option str-list kakboard_copy_keys ''

	map global normal <x> '<d>: kakboard-push-clipboard<ret>'
	map global normal <X> '<a-l><d>: kakboard-push-clipboard<ret>'
	map global normal <c> '<y>: kakboard-push-clipboard<ret>'
	map global normal <C> '<a-l><y>: kakboard-push-clipboard<ret>'

	hook global WinCreate .* %{ kakboard-enable }
	hook global WinCreate .* %{ kakboard-pull-clipboard }
	hook global FocusIn .* %{ kakboard-pull-clipboard }
}

plug 'Screwtapello/kakoune-inc-dec' domain "gitlab.com" config %{
	map global normal <a-_> ': inc-dec-modify-numbers - %val{count}<ret>'
	map global normal <a-plus> ': inc-dec-modify-numbers + %val{count}<ret>'
}

plug 'alexherbo2/auto-pairs.kak'

plug 'h-youhei/kakoune-surround' config %{
	map global Menu <a> ': surround<ret>'
	map global Menu <x> ': delete-surround<ret>'
	map global Menu <e> ': change-surround<ret>'
	map global Menu <a-e> ': select-surround<ret>'

	map global Menu <A> ': surround-with-tag<ret>'
	map global Menu <X> ': delete-surrounding-tag<ret>'
	map global Menu <E> ': change-surrounding-tag<ret>'
	map global Menu <a-E> ': select-surrounding-tag<ret>'
}

# plug 'ul/kak-lsp' do %{
# 	cargo build --release --locked
# 	cargo install --locked --force --path .
# } config %{
# 	eval %sh{kak-lsp --kakoune -s $kak_session}
# 	set global lsp_diagnostic_line_error_sign '║'
# 	set global lsp_diagnostic_line_warning_sign '┊'

# 	set-option global lsp_server_configuration pyls.configurationSources=["flake8"]
# 	define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
# 	define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
# 	define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }

# 	define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }
# 	hook global WinSetOption filetype=(python|c|cpp|cc|rust|javascript|typescript) %{
# 		set-option window lsp_auto_highlight_references true
# 		set-option window lsp_hover_anchor false
# 		lsp-auto-hover-enable
# 		echo -debug "Enabling LSP for filtetype %opt{filetype}"
# 		lsp-enable-window
# 	}

# 	map global normal <Q> ': enter-user-mode lsp<ret>'
# }

# plug 'occivink/kakoune-snippets' config %{
# 	set-option -add global snippets_directories "%opt{plug_install_dir}/kakoune-snippet-collection/snippets"
# 	plug 'andryorst/kakoune-snippet-collection'
# }

# plug 'Skytrias/gdscript-kak'
# plug 'ABuffSeagull/kakoune-vue'


###################################[ Options ]##################################
set-option global scrolloff 1,3
set-option global tabstop 4
set-option global indentwidth 0
set-option global ui_options ncurses_set_title=false
set-option global modelinefmt '{{context_info}} {{mode_info}} %val{cursor_line}:%val{cursor_char_column} '

add-highlighter global/ number-lines -relative -hlcursor -separator ' ' -min-digits '3'
add-highlighter global/ show-whitespaces -tab '▏' -tabpad ' ' -lf ' ' -spc ' ' -nbsp ' '
add-highlighter global/ show-matching
add-highlighter global/ dynregex '%reg{/}' 0:MatchingChar
add-highlighter global/ dynregex ' +$' 0:+u

# hook global WinDisplay .* %{
# 	set-option global ui_options ncurses_set_title=true
# 	set-option global modelinefmt '%val{bufname}'
# 	set-option global ui_options ncurses_set_title=false
# 	# set-option global modelinefmt '{{context_info}} {{mode_info}} %sh{
# 	# 	position=(${kak_selection_desc//,/ })
# 	# 	[[ ${position[0]} == ${position[1]} ]] \
# 	# 		&& positions=${position[1]} \
# 	# 		|| positions="${position[1]} & ${position[0]}"
# 	# 	echo "${positions//./:} / $(wc -l < $kak_buffile)"
# 	# } '
# 	set-option global modelinefmt '{{context_info}} {{mode_info}} %val{cursor_line}:%val{cursor_char_column} '
# 	echo %val{bufname}
# }

hook global WinDisplay .* %{ echo %val{bufname} }
hook global BufOpenFile .* %{ editorconfig-load }
hook global BufNewFile .* %{ editorconfig-load }

define-command wrap-on 'add-highlighter global/bkey-wrap wrap -word -indent'
define-command wrap-off 'remove-highlighter global/bkey-wrap'

# hook global WinSetOption filetype=(c|cpp) %{
#     clang-enable-autocomplete
#     clang-enable-diagnostics
#     alias window lint clang-parse
#     alias window lint-next-error clang-diagnostics-next
# }

# hook global WinSetOption filetype=python %{
#     jedi-enable-autocomplete
#     lint-enable
#     set-option global lintcmd 'flake8'
# }

hook global BufWritePost .* %{ echo %val{buffile} }
