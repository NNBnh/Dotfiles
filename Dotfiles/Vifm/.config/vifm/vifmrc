" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 2 June, 2019)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" Command used to edit files in various contexts.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd=nvim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" This makes vifm perform file operations on its own instead of relying on
" standard utilities like `cp`.  While using `cp` and alike is a more universal
" solution, it's also much slower when processing large amounts of files and
" doesn't support progress measuring.

set syscalls

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set nofollowlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

" set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" Use Vim's format of help file (has highlighting and "hyperlinks").
" If you would rather use a plain text help file set novimhelp.

set vimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Selected color scheme

colorscheme Default

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Display completions in a form of popup with descriptions of the matches

set wildstyle=bar

" Display suggestions in normal, visual and view modes for keys, marks and
" registers (at most 5 files).  In other view, when available.

set suggestoptions=normal,visual,view,otherpane,keys,marks,registers

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=7

" Don't do too many requests to slow file systems

if !has('win')
    set slowfs=curlftpfs
endif

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

mark h ~/

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" " Pdf
" filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c
fileviewer *.pdf pdftotext -nopgbrk %c -
"
" " PostScript
" filextype *.ps,*.eps,*.ps.gz
"         \ {View in zathura}
"         \ zathura %f,
"         \ {View in gv}
"         \ gv %c %i &,
"
" " Djvu
" filextype *.djvu
"         \ {View in zathura}
"         \ zathura %f,
"         \ {View in apvlv}
"         \ apvlv %f,
"
" " Audio
" filetype *.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus
"        \ {Play using ffplay}
"        \ ffplay -nodisp -autoexit %c,
"        \ {Play using MPlayer}
"        \ mplayer %f,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi
"
" " Video
" filextype *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
"          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
"          \*.as[fx]
"         \ {View using ffplay}
"         \ ffplay -fs -autoexit %f,
"         \ {View using Dragon}
"         \ dragon %f:p,
"         \ {View using mplayer}
"         \ mplayer %f,
fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx]
           \ ffprobe -pretty %c 2>&1
"
" " Web
" filextype *.html,*.htm
"         \ {Open with dwb}
"         \ dwb %f %i &,
"         \ {Open with firefox}
"         \ firefox %f &,
"         \ {Open with uzbl}
"         \ uzbl-browser %f %i &,
" filetype *.html,*.htm links, lynx
fileviewer *.html
 \ w3m %c

" " Object
" filetype *.o nm %f | less
"
" " Man page
" filetype *.[1-8] man ./%c
fileviewer *.[1-8] man ./%c | col -b
"
" " Images
" filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
"         \ {View in sxiv}
"         \ sxiv %f,
"         \ {View in gpicview}
"         \ gpicview %c,
"         \ {View in shotwell}
"         \ shotwell,

" " OpenRaster
" filextype *.ora
"         \ {Edit in MyPaint}
"         \ mypaint %f,
"
" " Mindmap
" filextype *.vym
"         \ {Open with VYM}
"         \ vym %f &,
"
" " MD5
" filetype *.md5
"        \ {Check MD5 hash sum}
"        \ md5sum -c %f %S,
"
" " SHA1
" filetype *.sha1
"        \ {Check SHA1 hash sum}
"        \ sha1sum -c %f %S,
"
" " SHA256
" filetype *.sha256
"        \ {Check SHA256 hash sum}
"        \ sha256sum -c %f %S,
"
" " SHA512
" filetype *.sha512
"        \ {Check SHA512 hash sum}
"        \ sha512sum -c %f %S,
"
" " GPG signature
" filetype *.asc
"        \ {Check signature}
"        \ !!gpg --verify %c,
"
" " Torrent
" filetype *.torrent ktorrent %f &
fileviewer *.torrent dumptorrent -v %c
"
" " FuseZipMount
" filetype *.zip,*.jar,*.war,*.ear,*.oxt,*.apkg
"        \ {Mount with fuse-zip}
"        \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
"        \ {View contents}
"        \ zip -sf %c | less,
"        \ {Extract here}
"        \ tar -xf %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c
"
" " ArchiveMount
" filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
"        \ {Mount with archivemount}
"        \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c
fileviewer *.tar tar -tf %c
"
" " Rar2FsMount and rar archives
" filetype *.rar
"        \ {Mount with rar2fs}
"        \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c
"
" " IsoMount
" filetype *.iso
"        \ {Mount with fuseiso}
"        \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,
"
" " SshMount
" filetype *.ssh
"        \ {Mount with sshfs}
"        \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,
"
" " FtpMount
" filetype *.ftp
"        \ {Mount with curlftpfs}
"        \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,
"
" " Fuse7z and 7z archives
" filetype *.7z
"        \ {Mount with fuse-7z}
"        \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c
"
" " Office files
" filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx docx2txt.pl %f -
"
" " TuDu files
" filetype *.tudu tudu -f %c
"
" " Qt projects
" filextype *.pro qtcreator %f &
"
" " Directories
" filextype */
"         \ {View in thunar}
"         \ Thunar %f &,

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
fileviewer *[^/] pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
         \ img2txt -W %pw %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
filetype * xdg-open %f &
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm sessions.  Drop "savedirs"
" value if you don't want vifm to remember last visited directories for you.
" set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
"     \phistory,fhistory,dirstack,registers,bookmarks,bmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Custom settings

set dotfiles
set dotdirs=
set tuioptions-=sp
set statusline="%A"
view
only

" file types
set classify='⠀ :dir:,⠀ :exe:,⠀ :reg:,⠀ :link:'
" dir name
set classify+='⠀ ::Datas/::,⠀ ::Dotfiles/::,⠀ ::Desktop/::,⠀凜::Documents/::,⠀ ::Games/::,⠀ ::Musics/::,⠀ ::Medias/::,'
" various file names
set classify+='⠀ ::*.sh,,*.bash,,*.zsh,,*.bashrc,,*.zshrc::,⠀ ::*.py::,⠀ ::*.nim::,⠀ ::*.md::,⠀﫥::/^copying|license$/::,⠀ ::.git/,,*.git/::,⠀ ::*.epub,,*.fb2,,*.djvu::,⠀ ::*.pdf::,⠀ ::*.htm,,*.html,,**.[sx]html,,*.xml::'
" archives
set classify+='⠀遲::*.7z,,*.ace,,*.arj,,*.bz2,,*.cpio,,*.deb,,*.dz,,*.gz,,*.jar,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.rz,,*.tar,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tgz,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.xz,,*.z,,*.zip,,*.zoo::'
" images
set classify+='⠀ ::*.bmp,,*.gif,,*.jpeg,,*.jpg,,*.ico,,*.png,,*.ppm,,*.svg,,*.svgz,,*.tga,,*.tif,,*.tiff,,*.xbm,,*.xcf,,*.xpm,,*.xspf,,*.xwd::'
" audio
set classify+='⠀ ::*.aac,,*.anx,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3::'
" media
set classify+='⠀ ::*.avi,,*.ts,,*.axv,,*.divx,,*.m2v,,*.m4p,,*.m4v,,.mka,,*.mkv,,*.mov,,*.mp4,,*.flv,,*.mp4v,,*.mpeg,,*.mpg,,*.nuv,,*.ogv,,*.pbm,,*.pgm,,*.qt,,*.vob,,*.wmv,,*.xvid::'
" office files
set classify+='⠀ ::*.doc,,*.docx::, ::*.xls,,*.xls[mx]::, ::*.pptx,,*.ppt::'

set cpoptions=fs
set confirm-=delete

" ------------------------------------------------------------------------------

"""" Mappings

" Unmap keys
map ` <Nop>
map ~ <Nop>
map ! <Nop>
map @ <Nop>
map # <Nop>
map $ <Nop>
map % <Nop>
map ^ <Nop>
map & <Nop>
map * <Nop>
map ( <Nop>
map ) <Nop>
map - <Nop>
map _ <Nop>
map <C--> <Nop>
map = <Nop>
map + <Nop>
map <C-=> <Nop>
map q <Nop>
map Q <Nop>
map <C-q> <Nop>
map w <Nop>
map W <Nop>
map <C-w> <Nop>
map e <Nop>
map E <Nop>
map <C-e> <Nop>
map r <Nop>
map R <Nop>
map <C-r> <Nop>
map t <Nop>
map T <Nop>
map <C-t> <Nop>
map y <Nop>
map Y <Nop>
map <C-y> <Nop>
map u <Nop>
map U <Nop>
map <C-u> <Nop>
map i <Nop>
map I <Nop>
map <C-i> <Nop>
map o <Nop>
map O <Nop>
map <C-o> <Nop>
map p <Nop>
map P <Nop>
map <C-p> <Nop>
map [ <Nop>
map { <Nop>
map <C-[> <Nop>
map ] <Nop>
map } <Nop>
map <C-]> <Nop>
map a <Nop>
map A <Nop>
map <C-a> <Nop>
map s <Nop>
map S <Nop>
map <C-s> <Nop>
map d <Nop>
map D <Nop>
map <C-d> <Nop>
map f <Nop>
map F <Nop>
map <C-f> <Nop>
map g <Nop>
map G <Nop>
map <C-g> <Nop>
map h <Nop>
map H <Nop>
map <C-h> <Nop>
map j <Nop>
map J <Nop>
map <C-j> <Nop>
map k <Nop>
map K <Nop>
map <C-k> <Nop>
map l <Nop>
map L <Nop>
map <C-l> <Nop>
map ; <Nop>
map : <Nop>
map <C-;> <Nop>
map ' <Nop>
map " <Nop>
map <C-'> <Nop>
map z <Nop>
map Z <Nop>
map <C-z> <Nop>
map x <Nop>
map X <Nop>
map <C-x> <Nop>
map c <Nop>
map C <Nop>
map <C-c> <Nop>
map v <Nop>
map V <Nop>
map <C-v> <Nop>
map b <Nop>
map B <Nop>
map <C-b> <Nop>
map n <Nop>
map N <Nop>
map <C-n> <Nop>
map m <Nop>
map M <Nop>
map <C-m> <Nop>
map , <Nop>
map < <Nop>
map <C-,> <Nop>
map . <Nop>
map > <Nop>
map <C-.> <Nop>
map / <Nop>
map ? <Nop>
map <C-/> <Nop>
map <Bslash> <Nop>
map <Bar> <Nop>
map <Space> <Nop>
"map <Tab> <Nop>
"map <CR> <Nop>

" Nava
	" Modes
	noremap / :
	noremap ? :shell<CR>
	noremap ; :
	noremap : :shell<CR>
	noremap <Space> <S-Tab>
	noremap s t
	noremap S v

	" Movements
	noremap i <Up>
	noremap I <C-u>
	noremap k <Down>
	noremap K <C-d>
	noremap j <Left>
	noremap J <Left>
	noremap l <Right>
	noremap L <Right>

		" Advance
		noremap <CR> <CR>
		noremap d <Right>
		noremap D <left>
		noremap rd i
		noremap rD e
		noremap f <C-o>
		noremap F <C-i>
		noremap u {
		noremap Uc [c
		noremap Ud [d
		noremap Us [s
		noremap Uz [z
		noremap Ur [r
		noremap UR [R
		noremap UR (
		noremap o }
		noremap Oc ]c
		noremap Od ]d
		noremap Os ]s
		noremap Oz ]z
		noremap Or ]r
		noremap OR ]R
		noremap O) )
		noremap n <Home>
		noremap N <Home>
		noremap m <End>
		noremap M <End>
		noremap <Tab> n
		noremap <S-Tab> N

		" Gotos
		noremap h '
		noremap H '

		" Bookmarks
		noremap r. m
		noremap r, '

	" Search & replace
	noremap g /
	noremap G :rename<CR>

	" Edits
		" Changes
		noremap w: q:
		noremap w= q=
		noremap w/ q/
		noremap w? q?
		noremap Ww cw
		noremap Wl cl
		noremap Wg cg
		noremap Wo co
		noremap Wp cp

		" Deletes
		noremap <Del> dd
		noremap <BS> dd
		noremap x dd
		noremap X d
		noremap rx DD
		noremap rX D

		" Clipboards
		noremap a al
		noremap A rl
		noremap c yy
		noremap C y
		noremap rc do
		noremap v p
		noremap V P
		noremap rv dp
		noremap ) "

		" Undo
		noremap z u
		noremap Z <C-r>

		" Info
		noremap q :vsplit!<CR>
		noremap Qa za
		noremap QM zM
		noremap Qo zO
		noremap QR zR
		noremap Qd zd
		noremap Qf zf
		noremap Qr zr
		noremap Q= z=
		noremap rt :redraw<CR>

" Alt
	" Nava
	map <M-`> `
	map <M-~> ~
	map <M-!> !
	map <M-@> @
	map <M-#> #
	map <M-$> $
	map <M-%> %
	map <M-^> ^
	map <M-&> &
	map <M-*> *
	map <M-(> (
	map <M-)> )
	map <M--> -
	map <M-_> _
	map <M-=> =
	map <M-+> +
	map <M-q> q
	map <M-Q> Q
	map <M-w> w
	map <M-W> W
	map <M-e> e
	map <M-E> E
	map <M-r> r
	map <M-R> R
	map <M-t> t
	map <M-T> T
	map <M-y> y
	map <M-Y> Y
	map <M-u> u
	map <M-U> U
	map <M-i> i
	map <M-I> I
	map <M-o> o
	map <M-O> O
	map <M-p> p
	map <M-P> P
	map <M-[> [
	map <M-{> {
	map <M-]> ]
	map <M-}> }
	map <M-a> a
	map <M-A> A
	map <M-s> s
	map <M-S> S
	map <M-d> d
	map <M-D> D
	map <M-f> f
	map <M-F> F
	map <M-g> g
	map <M-G> G
	map <M-h> h
	map <M-H> H
	map <M-j> j
	map <M-J> J
	map <M-k> k
	map <M-K> K
	map <M-l> l
	map <M-L> L
	map <M-;> ;
	map <M-'> '
	map <M-"> "
	map <M-z> z
	map <M-Z> Z
	map <M-x> x
	map <M-X> X
	map <M-c> c
	map <M-C> C
	map <M-v> v
	map <M-V> V
	map <M-b> b
	map <M-B> B
	map <M-n> n
	map <M-N> N
	map <M-m> m
	map <M-M> M
	map <M-,> ,
	map <M-<> <
	map <M-.> .
	map <M->> >
	map <M-/> /
	map <M-?> ?
	map <M-Bslash> <Bslash>
	map <M-Bar> <Bar>

" Viet mode
	" Movements
	noremap! <M-i> <Up>
	noremap! <M-k> <Down>
	noremap! <M-j> <Left>
	noremap! <M-l> <Right>

		" Advance
		noremap! <M-n> <Home>
		noremap! <M-S-n> <Home>
		noremap! <M-m> <End>
		noremap! <M-S-m> <End>

	" Edits
		" Deletes
		noremap! <Del> <BS>
		noremap! <M-Del> <BS>
		noremap! <BS> <BS>
		noremap! <M-BS> <BS>
		noremap! <M-e> <BS>

" Sele
	" Modes
		vnoremap s <CR>
		vnoremap S <CR>

	" Search & replace
	vnoremap G <CR>:rename<CR>

" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
" set grepprg='ag --line-numbers %i %a %s'

" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername
